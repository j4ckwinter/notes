
Directives:
There are three kinds of directives in Angular:
-Components: directives with a template.
-Structural directives: change the DOM layout by adding and removing DOM elements.
-Attribute directives: change the appearance or behavior of an element, component, 
or another directive.

Can't have two directives on the same element.

Instructions in the DOM
Lots of built in directives
<p appTurnGreen> Recieves a green background</p>

@Directive({
    selector: '[appTurnGreen]'
})
export class TurnGreenDirective {
    ...
}

Structural directive - *ngIf
Attribute directives - look like normal html (no star)

Terninary Expressions:
getColour() {
   return this.alertStatus === true ? 'green' : 'red';
}

Dynamic CSS:
This will apply css dynamically if property alertStatus === true
[ngClass]="{successful: alertStatus === true}"

Outputting Lists with ngFor:
*ngFor="let user of usernames"

Creating Directive:
ng g d directive_name

We can implement with OnInit and during initialisation we can use the type Renderer2.
Here we can call methods like renderer.setStyle().
Renderer can be used for any DOM manipulations

@HostBinding is a better way to manipulate the style.
@HostListener to listen to a click event.

In the below example isOpen binds to the css class 'class.open' (bootstrap):

//dropdown.directive.ts
@HostBinding('class.open') isOpen = false;
@HostListener('click) toggleOpen() {
    this.isOpen = !this.isOpen;
}

//any.component.ts that uses our directive
<div class="btn-group" appDropdown>

